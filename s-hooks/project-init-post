#!/usr/bin/env node
// Serverless projectInitPost hook script.
// echo "Hookscript: project-init-post $*"

// 'use strict';

console.log("Hookscript: project-init-post starting");
console.log(process.argv);
console.log(process.env);

var colors = require("colors/safe"),
    // prompt = require('prompt'),
    jsonfile = require('jsonfile'),
    Hashids = require("hashids"),
    hashids = new Hashids("gitrdone!"),
    AWS = require('aws-sdk');

var projectName = process.env.SLS_HOOK_NAME,
    projectStage = process.env.SLS_HOOK_STAGE;

var profileVar = 'AWS_' + projectStage + '_PROFILE';

var awsProfile = process.env[profileVar.toUpperCase()];

console.log(colors.cyan("Gitrdone stores encrypted user access tokens in an S3 bucket.\n" +
                    "The bucket will be created if it doesn't exist.\n" +
                    "If using an existing bucket, restrict world access!\n" +
                    "Bucket name must begin with \""+projectName+"-"+projectStage+"-\" in order for permissions to work."));

// prompt.delimiter = '';
// prompt.message = '';

// var schema = {
//   properties: {
//     bucket: {
//       description: colors.cyan("Enter a bucket name (must be globally unique to all of S3): "),
//       type: 'string',
//       // 3-63 chars, lowercase letters, numbers, and hyphens
//       // avoid using periods (".") in bucket names!
//       pattern: /^[a-z0-9][a-z0-9\-_]{2,62}$/,
//       message: 'Bucket name should consist of at least 3 and no more than 63 lowercase letters, numbers, or hyphens.',
//       default: projectName+'-'+projectStage+'-' + hashids.encode(Math.floor(new Date())).toLowerCase(),
//       required: true
//     }
//   }
// };

// prompt.start();

// prompt.get(schema, function (err, result) {
  console.log('Creating bucket "' + result.bucket + '" with AWS profile ' + awsProfile);

  var credentials = new AWS.SharedIniFileCredentials({profile: awsProfile});
  AWS.config.credentials = credentials;

  var s3bucket = new AWS.S3({
    params: {
      Bucket: result.bucket
    }
  });

  s3bucket.createBucket(function(err) {
    if (err) {
      console.log(colors.red("S3 bucket creation error:"));
      console.log(err);
    } else {
      console.log(colors.green("S3 bucket '"+result.bucket+"' created"));

      jsonfile.spaces = 2;

      var file = '_meta/variables/s-variables-' + projectStage + '.json';
      jsonfile.readFile(file, function(err, obj) {
        obj['s3_bucket_name_gitrdone'] = result.bucket;

        jsonfile.writeFile(file, obj, function (err) {
          if (err) {
            console.log("Failed to write 's3_bucket_name_gitrdone' variable to " + file);
            console.error(err);
            console.log(colors.red("Please manually set 's3_bucket_name_gitrdone' to '"+result.bucket+"' in " + file));
          } else {
            console.log(colors.green("Wrote 's3_bucket_name_gitrdone' variable to " + file));
          }
        });
      });
    }
  // });
});
